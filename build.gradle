buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }

    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/release" }
}

configurations {
    all*.exclude group: 'commons-logging'
    all*.exclude group: 'junit'
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

ext {

    springVersion = '4.2.5.RELEASE'
    jerseyVersion = '2.22.2'
    jettyClientVersion = '9.1.2.v20140210'
    commonsLang3Version = '3.1'
    jodaTimeVersion = '2.3'

    testNgVersion = '6.8'
    hamcrestVersion = '1.3'
    guavaVersion = '18.0'
    commonsLangVersion = '3.4'
    springPluginCoreVersion = '1.0.0.RELEASE'
    liquibaseVersion = '3.4.2'
}

dependencies {

    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.7.5'
    compile 'org.slf4j:jcl-over-slf4j:1.7.5'
    compile 'org.slf4j:jul-to-slf4j:1.7.5'

    compile "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    compile "org.springframework.plugin:spring-plugin-core:${springPluginCoreVersion}"

    compile "org.glassfish.jersey.containers:jersey-container-servlet:${jerseyVersion}"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
    compile "org.glassfish.jersey.ext:jersey-spring3:${jerseyVersion}"

    compile group: 'org.liquibase', name: 'liquibase-core', version: liquibaseVersion
    compile group: 'com.h2database', name: 'h2', version: '1.3.165'
    compile group: 'commons-lang', name: 'commons-lang', version: '2.4+'

    testCompile "org.testng:testng:${testNgVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testCompile group: 'org.springframework', name: 'spring-test', version: springVersion
}

test {
    useTestNG()
    include(["**/*Tests.class", "**/*Test.class"])
    exclude(["**/Abstract*.class", '**/*$*'])
}

springBoot {
    mainClass = 'com.jglitter.Application'
}

